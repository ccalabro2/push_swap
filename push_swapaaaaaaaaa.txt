#include "push_swap.h"



void	move_nodes(t_stack **a, t_stack **b)
{
	t_stack	*cheapest_node;

	cheapest_node = ft_return_cheapest(*b);
	if (cheapest_node->on_the_median == 1
		&& cheapest_node->goal->on_the_median == 1)
		rotate_both(a, b, cheapest_node);
	else if ((cheapest_node->on_the_median == -1)
		&& (cheapest_node->goal->on_the_median == -1))
		reverse_rotate_both(a, b, cheapest_node);
	finish_rotation(b, cheapest_node, 'b');
	finish_rotation(a, cheapest_node->goal, 'a');
	pa(a, b);
}

void	push_swap(t_stack **a, t_stack **b)
{
	t_stack	*smallest;
	int					len_a;

	len_a = stack_len(*a);
	while (len_a > 3)
	{
		pb(b, a);
		len_a--;
	}
	sort_three_nodes(a);
	while (*b != NULL)
	{
		initialize_everything(*a, *b);
		move_nodes(a, b);
	}
	ft_node_position(*a);
	set_node_median(*a);
	smallest = find_smallest(*a);
	if (smallest->on_the_median == 1)
		while (*a != smallest)
			ra(a);
	else
		while (*a != smallest)
			rra(a);
}
